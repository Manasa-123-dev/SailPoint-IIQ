 <?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE TaskDefinition PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<TaskDefinition created="1701496227196" executor="sailpoint.reporting.LiveReportExecutor" id="c0a81dd18c291a76818c29140573001d" modified="1703771955196" name="list identities whose manager is inactive Report" progressMode="Percentage" resultAction="Rename" significantModified="1703771955196" subType="Identity and User Reports" template="true" type="LiveReport">
  <Attributes>
    <Map>
      <entry key="TaskDefinition.runLengthAverage" value="8"/>
      <entry key="TaskDefinition.runLengthTotal" value="123"/>
      <entry key="TaskDefinition.runs" value="15"/>
      <entry key="report">
        <value>
          <LiveReport title="Leaver Details Report">
            <DataSource objectType="Identity" type="Filter">
              <OptionsScript>
                <Source>
                  import java.util.*;
                  import java.lang.String;  
                  import sailpoint.api.ObjectUtil; 
                  import sailpoint.object.QueryOptions;
                  import sailpoint.object.Filter; 
                  import sailpoint.object.Identity; 
                 
                  QueryOptions op = new QueryOptions(); 
                 // op.addFilter(Filter.eq("inactive",false));
                  List list = new ArrayList(); 
                  list.add("id"); 
                  list.add("name"); 
                  list.add("manager"); // result of active identities 

                  Iterator itr = context.search(Identity.class,op,list); //Now create list identities that have an inactive manager 
                  List inactiveManagerList = new ArrayList();

                  String theIdentityId = null;
                  String theIdentityName = null; 
                  Identity theManager = null; 
                  boolean theManagerStatus; 

                  while(itr.hasNext()) { 

                  Object[] row = itr.next();
                  theIdentityId = (String) row[0]; 
                  theIdentityName = (String) row[1]; 
                  theManager = (Identity)row[2]; 

                  if(theManager != null) {        
                  theManagerStatus = theManager.isInactive(); 

                  if(theManagerStatus) 
                  { inactiveManagerList.add(theIdentityId); 
                  } 
                  else {
                  } 
                  } 
                  }
                  if (inactiveManagerList.isEmpty()) 
                  { inactiveManagerList.add("empty list");
                  } 
                  QueryOptions ops = new QueryOptions(); 
                  ops.addFilter(Filter.in("id", inactiveManagerList)); 
                  return ops;
                </Source>
              </OptionsScript>
            </DataSource>
            <Columns>
              <ReportColumnConfig field="identityName" header="Name" property="name" sortable="true" width="110"/>
              <ReportColumnConfig field="identityManager" header="Manager Name" property="id" sortable="true" width="110">
                <RenderScript>
                  <Source> import sailpoint.object.*; 
                    import sailpoint.api.*;
                    import java.util.*; 
                    Identity identity = context.getObjectById(Identity.class,value); if(identity == null) return ""; 
                    Identity manager = identity.getManager(); if(manager == null) return ""; return manager.getName(); </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="identityManagerStatus" header="Manager status(inactive)" property="id" sortable="true" width="110">
                <RenderScript>
                  <Source> import sailpoint.object.*; 
                    import sailpoint.api.*; 
                    import java.util.*; 
                    Identity identity = context.getObjectById(Identity.class,value); 
                    if(identity == null) return "";
                    Identity manager = identity.getManager(); 
                    if(manager == null) 
                    return ""; 
                    return manager.isInactive(); 
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
            </Columns>
          </LiveReport>
        </value>
      </entry>
    </Map>
  </Attributes>
  <Description>A deatiled information about inactive managers list</Description>
  <RequiredRights>
    <Reference class="sailpoint.object.SPRight" id="0a0014238b8f1ca2818b8ffcee2d0032" name="FullAccessReport"/>
  </RequiredRights>
</TaskDefinition>
