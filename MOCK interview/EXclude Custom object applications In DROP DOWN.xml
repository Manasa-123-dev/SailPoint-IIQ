<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule created="1716901843056" id="0a00141f8fbd1320818fbf5310700266" language="beanshell" modified="1716988244097" name="QUERY OPTIONS__TEST" significantModified="1716988244097" type="Workflow">
  <Description>A rule used by a Workflow to determine a step action or variable value.

Note that an Attributes map of all variables from the current WorkflowContext, merged with the arguments from the Step, is also passed into the workflow rule.</Description>
  <Signature returnType="Object">
    <Inputs>
      <Argument name="log" type="org.apache.commons.logging.Log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context" type="sailpoint.api.SailPointContext">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
     
    </Inputs>
    <Returns>
      <Argument name="Object">
        <Description>
          The result of the workflow rule; dependent on the rule itself.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>import sailpoint.object.Rule;
import sailpoint.object.Identity;
import java.util.List;
import sailpoint.object.QueryOptions; 
import sailpoint.object.Filter;
  import sailpoint.object.Application;
  import sailpoint.object.Custom;
   import sailpoint.object.Links;
  
  
 Custom cuObj=context.getObjectByName(Custom.class,"CustomObject");
 if(cuObj!=null)
 {
   List appList=cuObj.get("EXCLUDED APPLICATIONS");
  
   QueryOptions qo=new QueryOptions();
  
   qo.addFilter((Filter.not(Filter.in("Application.name",appList))));
  
  List includedApps=context.getObjects(Application.class,qo);
  
  for(Application a:includedApps)
  {
  
  System.out.println("APPLICATIONS ARE"+a.getName());
  
  }
 }
   
  
  
  

</Source>
</Rule>
